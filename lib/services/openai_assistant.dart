import 'dart:convert';
import 'package:http/http.dart' as http;
import '../secrets.dart'; // API-–∫–ª—é—á OpenAI

class OpenAIAssistant {
  // üìå –ê–Ω–∞–ª–∏–∑ —á–µ—Ä—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ OpenAI Vision
  static Future<String> analyzeDrawing(String base64Image) async {
    const String apiUrl = "https://api.openai.com/v1/chat/completions";

    try {
      final response = await http.post(
        Uri.parse(apiUrl),
        headers: {
          "Authorization": "Bearer $openAiApiKey", // üîë API-–∫–ª—é—á
          "Content-Type": "application/json",
        },
        body: jsonEncode({
          "model": "gpt-4-vision-preview", // üîç –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–¥–µ–ª—å Vision
          "messages": [
            {
              "role": "system",
              "content": "–¢—ã –∏–Ω–∂–µ–Ω–µ—Ä-—Å—Ç—Ä–æ–∏—Ç–µ–ª—å. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π —á–µ—Ä—Ç–µ–∂–∏, —Å—á–∏—Ç—ã–≤–∞–π —Ä–∞–∑–º–µ—Ä—ã –∏ —Å–æ–∑–¥–∞–≤–∞–π —Ä–∞—Å—á–µ—Ç—ã."
            },
            {
              "role": "user",
              "content": [

            {
                  "type": "text",
                  "text": "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —á–µ—Ä—Ç–µ–∂ –∏ –æ–ø—Ä–µ–¥–µ–ª–∏ —Ä–∞–∑–º–µ—Ä—ã –ø–æ–º–µ—â–µ–Ω–∏—è, —Å—Ç–µ–Ω—ã –∏ –¥–≤–µ—Ä–∏."
                },
            {
              "type": "image_url",
              "image_url": {"url": "data:image/png;base64,$base64Image"}
            }
               ]
            }
          ],
          "max_tokens": 500
        }),
      );

      if (response.statusCode == 200) {
        final data = jsonDecode(utf8.decode(response.bodyBytes));
        return data["choices"][0]["message"]["content"];
      } else {
        throw Exception("–û—à–∏–±–∫–∞ OpenAI: ${response.body}");
      }
    } catch (e) {
      return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —á–µ—Ä—Ç–µ–∂–∞: $e";
    }
  }
}
