import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'building_input_screen.dart'; // üèó –≠–∫—Ä–∞–Ω –≤–≤–æ–¥–∞ –∑–¥–∞–Ω–∏—è
import 'room_list_screen.dart'; // üö™ –≠–∫—Ä–∞–Ω —Å–ø–∏—Å–∫–∞ –∫–æ–º–Ω–∞—Ç

class BuildingListScreen extends StatelessWidget {
  final String projectId;

  const BuildingListScreen({super.key, required this.projectId});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text("–°–ø–∏—Å–æ–∫ –∑–¥–∞–Ω–∏–π")),
      body: StreamBuilder<QuerySnapshot>(
        stream: FirebaseFirestore.instance
            .collection('projects')
            .doc(projectId)
            .collection('buildings')
            .snapshots(),
        builder: (context, snapshot) {
          if (!snapshot.hasData) {
            return const Center(child: CircularProgressIndicator());
          }

          var buildings = snapshot.data!.docs;

          return ListView.builder(
            itemCount: buildings.length,
            itemBuilder: (context, index) {
              var building = buildings[index];
              var buildingData =
                  building.data() as Map<String, dynamic>?; // ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ

              // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –∑–∞—â–∏—Ç—É –æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
              String name = buildingData?['name'] ?? "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è";
              int floors = (buildingData?['floors'] ?? 1).toInt();

              return ListTile(
                title: Text(name),
                subtitle: Text("–≠—Ç–∞–∂–µ–π: $floors"),
                onTap: () {
                  if (!context.mounted) {
                    return; // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç–∫—Ä–∞–Ω —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω
                  }
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => RoomListScreen(
                          projectId: projectId, buildingId: building.id),
                    ),
                  );
                },
                trailing: Row(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    IconButton(
                      // üìå –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–¥–∞–Ω–∏—è
                      icon: const Icon(Icons.edit, color: Colors.blue),
                      onPressed: () {
                        if (!context.mounted) return;
                        Navigator.push(
                          context,
                          MaterialPageRoute(
                            builder: (context) => BuildingInputScreen(
                                projectId: projectId, buildingId: building.id),
                          ),
                        );
                      },
                    ),
                    IconButton(
                      // üìå –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–¥–∞–Ω–∏—è
                      icon: const Icon(Icons.delete, color: Colors.red),
                      onPressed: () async {
                        try {
                          await FirebaseFirestore.instance
                              .collection('projects')
                              .doc(projectId)
                              .collection('buildings')
                              .doc(building.id)
                              .delete();
                        } catch (e) {
                          debugPrint("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–¥–∞–Ω–∏—è: $e");
                          if (!context.mounted) return;
                          ScaffoldMessenger.of(context).showSnackBar(
                            SnackBar(
                              content: Text("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–¥–∞–Ω–∏—è: $e"),
                              backgroundColor: Colors.red,
                            ),
                          );
                        }
                      },
                    ),
                  ],
                ),
              );
            },
          );
        },
      ),
      floatingActionButton: FloatingActionButton(
        // ‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–¥–∞–Ω–∏–µ
        onPressed: () {
          if (!context.mounted) return;
          Navigator.push(
            context,
            MaterialPageRoute(
              builder: (context) =>
                  BuildingInputScreen(projectId: projectId, buildingId: null),
            ),
          );
        },
        child: const Icon(Icons.add),
      ),
    );
  }
}
