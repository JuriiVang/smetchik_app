import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
import 'secrets.dart'; // –§–∞–π–ª —Å API-–∫–ª—é—á–æ–º
import 'package:flutter_markdown/flutter_markdown.dart';
import 'package:flutter_image/flutter_image.dart'; // üìå –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–∞–∫–µ—Ç

class DesignScreen extends StatefulWidget {
  final String projectId;
  final String buildingId;
  final String roomId;

  const DesignScreen({
    super.key,
    required this.projectId,
    required this.buildingId,
    required this.roomId,
  });

  @override
  State<DesignScreen> createState() => _DesignScreenState();
}

class _DesignScreenState extends State<DesignScreen> {
  String selectedStyle = "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π";
  String selectedBudget = "–°—Ç–∞–Ω–¥–∞—Ä—Ç";
  String designDescription = "–ù–∞–∂–º–∏—Ç–µ '–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç', —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ";
  String? imageUrl; // üîπ –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

  Future<void> _generateDesign() async {
    debugPrint("üì¢ –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–æ–µ–∫—Ç–∞...");
    debugPrint("‚û° –°—Ç–∏–ª—å: $selectedStyle, –ë—é–¥–∂–µ—Ç: $selectedBudget");

    try {
      // üîπ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
      String result = await generateDesign("–∫–æ–º–Ω–∞—Ç–∞", selectedStyle, selectedBudget);

      // üîπ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      String image = await generateImage(selectedStyle);

      setState(() {
        designDescription = result;
        imageUrl = image;
      });
    } catch (e) {
      debugPrint("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞: $e");
      setState(() {
        designDescription = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞.";
        imageUrl = null; // –û–±–Ω—É–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text("–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Text("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å:", style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),

            DropdownButtonFormField<String>(
              value: ["–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π", "–ö–ª–∞—Å—Å–∏–∫–∞", "–ú–∏–Ω–∏–º–∞–ª–∏–∑–º", "–°—Ç–∞–Ω–¥–∞—Ä—Ç"].contains(selectedStyle)
                  ? selectedStyle
                  : "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π",
              decoration: const InputDecoration(labelText: "–°—Ç–∏–ª—å"),
              items: ["–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π", "–ö–ª–∞—Å—Å–∏–∫–∞", "–ú–∏–Ω–∏–º–∞–ª–∏–∑–º", "–°—Ç–∞–Ω–¥–∞—Ä—Ç"]
                  .map((style) => DropdownMenuItem(value: style, child: Text(style)))
                  .toList(),
              onChanged: (value) {
                setState(() {
                  selectedStyle = value!;
                });
              },
            ),

            const SizedBox(height: 10),

            const Text("–í—ã–±–µ—Ä–∏—Ç–µ –±—é–¥–∂–µ—Ç:", style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),
            DropdownButton<String>(
              value: selectedBudget,
              items: ["–≠–∫–æ–Ω–æ–º", "–°—Ç–∞–Ω–¥–∞—Ä—Ç", "–ü—Ä–µ–º–∏—É–º"].map((String budget) {
                return DropdownMenuItem(value: budget, child: Text(budget));
              }).toList(),
              onChanged: (String? value) {
                setState(() {
                  selectedBudget = value!;
                });
              },
            ),

            const SizedBox(height: 20),

            ElevatedButton(
              onPressed: _generateDesign,
              child: const Text("–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç"),
            ),

            const SizedBox(height: 20),

            Expanded(
              child: SingleChildScrollView(
                child: MarkdownBody(
                  data: designDescription,
                ),
              ),
            ),



               Image.network(
                 imageUrl,
                 loadingBuilder: (context, child, loadingProgress) {
                  if (loadingProgress == null) return child;
                  return Center(child: CircularProgressIndicator()); // üîÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
                 },
                 errorBuilder: (context, error, stackTrace) {
                   return const Icon(Icons.error, size: 50, color: Colors.red); // ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
                 },
               )

          ],
        ),
      ),
    );
  }
}

// ‚úÖ **–§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∏–∑–∞–π–Ω–∞ (–û–°–¢–ê–ï–¢–°–Ø –ü–†–ï–ñ–ù–ï–ô)**
Future<String> generateDesign(String roomType, String style, String budget) async {
  const apiUrl = "https://api.openai.com/v1/chat/completions";

  try {
    final response = await http.post(
      Uri.parse(apiUrl),
      headers: {
        "Authorization": "Bearer $openAiApiKey", // üîë –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á
        "Content-Type": "application/json",
      },
      body: jsonEncode({
        "model": "gpt-4o",
        "messages": [
          {"role": "system", "content": "–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω–µ—Ä –∏–Ω—Ç–µ—Ä—å–µ—Ä–æ–≤."},
          {"role": "user", "content": "–°–æ–∑–¥–∞–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è $roomType –≤ —Å—Ç–∏–ª–µ $style —Å –±—é–¥–∂–µ—Ç–æ–º $budget."}
        ],
        "max_tokens": 1000
      }),
    );

    if (response.statusCode == 200) {
      final data = jsonDecode(utf8.decode(response.bodyBytes));
      return data["choices"][0]["message"]["content"];
    } else {
      throw Exception("–û—à–∏–±–∫–∞ OpenAI: ${response.body}");
    }
  } catch (e) {
    return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ OpenAI: $e";
  }
}

// ‚úÖ **–§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ DALL¬∑E 3**
Future<String> generateImage(String style) async {
  const String apiUrl = "https://api.openai.com/v1/images/generations";

  try {
    final response = await http.post(
      Uri.parse(apiUrl),
      headers: {
        "Authorization": "Bearer $openAiApiKey", // üîë –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ API-–∫–ª—é—á
        "Content-Type": "application/json",
      },
      body: jsonEncode({
        "model": "dall-e-3",
        "prompt": "Beautiful interior design in $style style",
        "n": 1,
        "size": "1024x1024",
      }),
    );

    if (response.statusCode == 200) {
      final data = jsonDecode(response.body);
      return data["data"][0]["url"];
    } else {
      throw Exception("–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${response.body}");
    }
  } catch (e) {
    return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: $e";
  }
}
