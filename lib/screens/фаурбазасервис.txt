import 'dart:typed_data';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_storage/firebase_storage.dart';
import 'package:flutter/foundation.dart'; // –î–ª—è kIsWeb

class FirebaseService {
  static final FirebaseFirestore _firestore = FirebaseFirestore.instance;
  static final FirebaseStorage _storage = FirebaseStorage.instance;

  // üìå –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ –∫–æ–º–Ω–∞—Ç—ã –≤ Firestore
  static Future<void> saveRoomDimensions(
      String projectId, String buildingId, String roomId, Map<String, dynamic> dimensions) async {
    try {
      await _firestore
          .collection('projects')
          .doc(projectId)
          .collection('buildings')
          .doc(buildingId)
          .collection('rooms')
          .doc(roomId)
          .update({
        "dimensions": dimensions,
        "updatedAt": FieldValue.serverTimestamp(),
      });

      debugPrint("‚úÖ –†–∞–∑–º–µ—Ä—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Firestore!");
    } catch (e) {
      debugPrint("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: $e");
    }
  }

  // üìå –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Firebase Storage
  static Future<String?> uploadImage(Uint8List imageData, String projectId, String roomId) async {
    try {
      final ref = _storage.ref().child('room_images/$projectId/$roomId.png');
      await ref.putData(imageData);
      return await ref.getDownloadURL();
    } catch (e) {
      debugPrint("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: $e");
      return null;
    }
  }

  // üìå –ü–æ–ª—É—á–µ–Ω–∏–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–º–Ω–∞—Ç—ã
  static Future<String?> getImageUrl(String projectId, String roomId) async {
    try {
      final ref = _storage.ref().child('room_images/$projectId/$roomId.png');
      return await ref.getDownloadURL();
    } catch (e) {
      debugPrint("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: $e");
      return null;
    }
  }
}
